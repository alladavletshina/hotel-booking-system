#!/bin/bash

# test-hotel-booking-system-fixed.sh
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π

echo "=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è) ==="
echo

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ë–∞–∑–æ–≤—ã–µ URL
GATEWAY_URL="http://localhost:8080"
AUTH_URL="$GATEWAY_URL/api/auth"
HOTELS_URL="$GATEWAY_URL/api/hotels"
ROOMS_URL="$GATEWAY_URL/api/rooms"
BOOKINGS_URL="$GATEWAY_URL/api/bookings"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
USER_TOKEN=""
ADMIN_TOKEN=""

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

print_error() {
    echo -e "${RED}‚úó $1${NC}"
}

print_info() {
    echo -e "${YELLOW}‚Ñπ $1${NC}"
}

print_debug() {
    echo -e "${BLUE}üêõ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
http_request() {
    local method=$1
    local url=$2
    local data=$3
    local token=$4

    local curl_cmd="curl -s -w \"|%{http_code}\" -X $method \"$url\" -H \"Content-Type: application/json\""

    if [ ! -z "$token" ]; then
        curl_cmd="$curl_cmd -H \"Authorization: Bearer $token\""
    fi

    if [ ! -z "$data" ]; then
        curl_cmd="$curl_cmd -d '$data'"
    fi

    local response
    response=$(eval $curl_cmd 2>/dev/null)

    # –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –∏ —Å—Ç–∞—Ç—É—Å –∫–æ–¥
    local body=$(echo "$response" | sed 's/|.*$//')
    local status_code=$(echo "$response" | sed 's/^.*|//')

    echo "$body"
    return $status_code
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services() {
    echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ ==="

    services=("eureka-server:8761" "auth-service:8081" "api-gateway:8080" "hotel-service:8082" "booking-service:8083")

    for service in "${services[@]}"; do
        IFS=':' read -r name port <<< "$service"
        if curl -s "http://localhost:$port/actuator/health" > /dev/null; then
            print_success "$name –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $port"
        else
            print_error "$name –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $port"
        fi
    done
    echo
}

# 1. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö)
authenticate_users() {
    echo "=== 1. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ==="

    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print_info "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è testuser..."
    LOGIN_RESPONSE=$(http_request "POST" "$AUTH_URL/login" '{
        "username": "testuser",
        "password": "password123"
    }')

    local status_code=$?
    if [ $status_code -eq 200 ] && echo "$LOGIN_RESPONSE" | grep -q "token"; then
        USER_TOKEN=$(echo "$LOGIN_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
        print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
        print_debug "–¢–æ–∫–µ–Ω: ${USER_TOKEN:0:50}..."
    else
        print_error "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–¥: $status_code"
        print_debug "–û—Ç–≤–µ—Ç: $LOGIN_RESPONSE"

        # –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print_info "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
        REGISTER_RESPONSE=$(http_request "POST" "$AUTH_URL/register" '{
            "username": "user2",
            "password": "password123",
            "email": "user2@example.com",
            "firstName": "User",
            "lastName": "Two"
        }')

        if echo "$REGISTER_RESPONSE" | grep -q "token"; then
            USER_TOKEN=$(echo "$REGISTER_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
            print_success "–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
        else
            print_error "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: $REGISTER_RESPONSE"
        fi
    fi

    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print_info "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ admin..."
    ADMIN_LOGIN_RESPONSE=$(http_request "POST" "$AUTH_URL/login" '{
        "username": "admin",
        "password": "admin123"
    }')

    local admin_status_code=$?
    if [ $admin_status_code -eq 200 ] && echo "$ADMIN_LOGIN_RESPONSE" | grep -q "token"; then
        ADMIN_TOKEN=$(echo "$ADMIN_LOGIN_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
        print_success "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
        print_debug "–¢–æ–∫–µ–Ω: ${ADMIN_TOKEN:0:50}..."
    else
        print_error "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ö–æ–¥: $admin_status_code"
        print_debug "–û—Ç–≤–µ—Ç: $ADMIN_LOGIN_RESPONSE"

        # –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        print_info "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
        ADMIN_REGISTER_RESPONSE=$(http_request "POST" "$AUTH_URL/register" '{
            "username": "admin2",
            "password": "admin123",
            "email": "admin2@example.com",
            "firstName": "Admin",
            "lastName": "Two",
            "role": "ADMIN"
        }')

        if echo "$ADMIN_REGISTER_RESPONSE" | grep -q "token"; then
            ADMIN_TOKEN=$(echo "$ADMIN_REGISTER_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
            print_success "–ù–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
        else
            print_error "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: $ADMIN_REGISTER_RESPONSE"
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if [ ! -z "$USER_TOKEN" ]; then
        print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
        VALIDATE_RESPONSE=$(http_request "GET" "$AUTH_URL/validate" "" "$USER_TOKEN")
        local validate_status=$?
        if [ $validate_status -eq 200 ]; then
            print_success "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞–ª–∏–¥–µ–Ω"
        else
            print_error "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–≤–∞–ª–∏–¥–µ–Ω. –ö–æ–¥: $validate_status"
        fi
    fi
    echo
}

# 2. –†–∞–±–æ—Ç–∞ —Å –æ—Ç–µ–ª—è–º–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è ADMIN)
manage_hotels() {
    echo "=== 2. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–µ–ª—è–º–∏ (ADMIN) ==="

    if [ -z "$ADMIN_TOKEN" ]; then
        print_error "–¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –æ—Ç–µ–ª–µ–π"
        return 1
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–µ–ª—è
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–µ–ª—è..."
    HOTEL_RESPONSE=$(http_request "POST" "$HOTELS_URL" '{
        "name": "Grand Plaza Hotel",
        "address": "123 Main Street, Moscow",
        "description": "Luxury 5-star hotel in city center"
    }' "$ADMIN_TOKEN")

    local hotel_status=$?
    if [ $hotel_status -eq 200 ] && echo "$HOTEL_RESPONSE" | grep -q "id"; then
        HOTEL_ID=$(echo "$HOTEL_RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        print_success "–û—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω. ID: $HOTEL_ID"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–µ–ª—è. –ö–æ–¥: $hotel_status"
        print_debug "–û—Ç–≤–µ—Ç: $HOTEL_RESPONSE"

        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ—Ç–µ–ª–∏
        print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –æ—Ç–µ–ª–µ–π..."
        EXISTING_HOTELS=$(http_request "GET" "$HOTELS_URL" "" "$ADMIN_TOKEN")
        if echo "$EXISTING_HOTELS" | grep -q "id"; then
            HOTEL_ID=$(echo "$EXISTING_HOTELS" | grep -o '"id":[0-9]*' | head -1 | cut -d':' -f2)
            print_success "–ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç–µ–ª—å. ID: $HOTEL_ID"
        else
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–µ–ª—å"
            return 1
        fi
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –≤ –æ—Ç–µ–ª–µ..."
    ROOM_RESPONSE=$(http_request "POST" "$ROOMS_URL" '{
        "number": "101",
        "type": "DELUXE",
        "price": 5000.0,
        "available": true,
        "hotelId": '$HOTEL_ID'
    }' "$ADMIN_TOKEN")

    local room_status=$?
    if [ $room_status -eq 200 ] && echo "$ROOM_RESPONSE" | grep -q "id"; then
        ROOM_ID=$(echo "$ROOM_RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        print_success "–ù–æ–º–µ—Ä —Å–æ–∑–¥–∞–Ω. ID: $ROOM_ID"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞. –ö–æ–¥: $room_status"
        print_debug "–û—Ç–≤–µ—Ç: $ROOM_RESPONSE"

        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–æ–º–µ—Ä–∞
        print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –Ω–æ–º–µ—Ä–æ–≤..."
        EXISTING_ROOMS=$(http_request "GET" "$ROOMS_URL" "" "$ADMIN_TOKEN")
        if echo "$EXISTING_ROOMS" | grep -q "id"; then
            ROOM_ID=$(echo "$EXISTING_ROOMS" | grep -o '"id":[0-9]*' | head -1 | cut -d':' -f2)
            print_success "–ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä. ID: $ROOM_ID"
        else
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–º–µ—Ä"
            return 1
        fi
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π (–¥–ª—è USER)
    if [ ! -z "$USER_TOKEN" ]; then
        print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º..."
        HOTELS_LIST_RESPONSE=$(http_request "GET" "$HOTELS_URL" "" "$USER_TOKEN")
        local list_status=$?
        if [ $list_status -eq 200 ]; then
            print_success "–°–ø–∏—Å–æ–∫ –æ—Ç–µ–ª–µ–π –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
            print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π. –ö–æ–¥: $list_status"
        fi
    fi
    echo
}

# 3. –†–∞–±–æ—Ç–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏
manage_rooms() {
    echo "=== 3. –†–∞–±–æ—Ç–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏ ==="

    if [ -z "$USER_TOKEN" ]; then
        print_error "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –Ω–æ–º–µ—Ä–æ–≤"
        return 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
    print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤..."
    AVAILABLE_ROOMS_RESPONSE=$(http_request "GET" "$ROOMS_URL" "" "$USER_TOKEN")
    local available_status=$?
    if [ $available_status -eq 200 ]; then
        if echo "$AVAILABLE_ROOMS_RESPONSE" | grep -q "id"; then
            print_success "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω"
            local room_count=$(echo "$AVAILABLE_ROOMS_RESPONSE" | grep -o '"id"' | wc -l)
            print_info "–ù–∞–π–¥–µ–Ω–æ –Ω–æ–º–µ—Ä–æ–≤: $room_count"
        else
            print_info "–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤. –ö–æ–¥: $available_status"
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
    print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤..."
    RECOMMENDED_ROOMS_RESPONSE=$(http_request "GET" "$ROOMS_URL/recommend" "" "$USER_TOKEN")
    local recommended_status=$?
    if [ $recommended_status -eq 200 ]; then
        if echo "$RECOMMENDED_ROOMS_RESPONSE" | grep -q "id"; then
            print_success "–°–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω"
        else
            print_info "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤. –ö–æ–¥: $recommended_status"
    fi
    echo
}

# 4. –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
manage_bookings() {
    echo "=== 4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏ ==="

    if [ -z "$USER_TOKEN" ]; then
        print_error "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π"
        return 1
    fi

    if [ -z "$ROOM_ID" ]; then
        print_error "ID –Ω–æ–º–µ—Ä–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π"
        return 1
    fi

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞—Ç—ã –≤ –±—É–¥—É—â–µ–º
    local start_date=$(date -v+2d +%Y-%m-%d 2>/dev/null || date -d "+2 days" +%Y-%m-%d)
    local end_date=$(date -v+5d +%Y-%m-%d 2>/dev/null || date -d "+5 days" +%Y-%m-%d)

    # –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–æ–º–µ—Ä–∞ $ROOM_ID, –¥–∞—Ç—ã: $start_date - $end_date)..."
    BOOKING_RESPONSE=$(http_request "POST" "$BOOKINGS_URL" '{
        "roomId": '$ROOM_ID',
        "startDate": "'$start_date'",
        "endDate": "'$end_date'",
        "correlationId": "test-booking-'$(date +%s)'"
    }' "$USER_TOKEN")

    local booking_status=$?
    if [ $booking_status -eq 200 ] && echo "$BOOKING_RESPONSE" | grep -q "id"; then
        BOOKING_ID=$(echo "$BOOKING_RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        BOOKING_STATUS=$(echo "$BOOKING_RESPONSE" | grep -o '"status":"[^"]*' | cut -d'"' -f4)
        print_success "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ. ID: $BOOKING_ID, –°—Ç–∞—Ç—É—Å: $BOOKING_STATUS"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ö–æ–¥: $booking_status"
        print_debug "–û—Ç–≤–µ—Ç: $BOOKING_RESPONSE"
        return 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print_info "–ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
    USER_BOOKINGS_RESPONSE=$(http_request "GET" "$BOOKINGS_URL/my" "" "$USER_TOKEN")
    local user_bookings_status=$?
    if [ $user_bookings_status -eq 200 ]; then
        if echo "$USER_BOOKINGS_RESPONSE" | grep -q "id"; then
            print_success "–°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω"
            local booking_count=$(echo "$USER_BOOKINGS_RESPONSE" | grep -o '"id"' | wc -l)
            print_info "–ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: $booking_count"
        else
            print_info "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π. –ö–æ–¥: $user_bookings_status"
    fi

    # –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    print_info "–û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è $BOOKING_ID..."
    CANCEL_RESPONSE=$(http_request "DELETE" "$BOOKINGS_URL/$BOOKING_ID" "" "$USER_TOKEN")
    local cancel_status=$?
    if [ $cancel_status -eq 200 ]; then
        print_success "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ö–æ–¥: $cancel_status"
        print_debug "–û—Ç–≤–µ—Ç: $CANCEL_RESPONSE"
    fi
    echo
}

# 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
test_error_cases() {
    echo "=== 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ ==="

    # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–µ–ª—è –±–µ–∑ –ø—Ä–∞–≤ ADMIN
    if [ ! -z "$USER_TOKEN" ]; then
        print_info "–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—à–∏–±–∫–∞)..."
        UNAUTHORIZED_HOTEL_RESPONSE=$(http_request "POST" "$HOTELS_URL" '{
            "name": "Unauthorized Hotel",
            "address": "Test Address"
        }' "$USER_TOKEN")

        local unauthorized_status=$?
        if [ $unauthorized_status -eq 403 ] || [ $unauthorized_status -eq 401 ]; then
            print_success "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (–∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å). –ö–æ–¥: $unauthorized_status"
        elif echo "$UNAUTHORIZED_HOTEL_RESPONSE" | grep -q "error\|denied\|access"; then
            print_success "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (–∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å)"
        else
            print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –ö–æ–¥: $unauthorized_status"
            print_debug "–û—Ç–≤–µ—Ç: $UNAUTHORIZED_HOTEL_RESPONSE"
        fi
    fi

    # –ü–æ–ø—ã—Ç–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏
    if [ ! -z "$USER_TOKEN" ] && [ ! -z "$ROOM_ID" ]; then
        print_info "–ü–æ–ø—ã—Ç–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏..."
        INVALID_DATE_RESPONSE=$(http_request "POST" "$BOOKINGS_URL" '{
            "roomId": '$ROOM_ID',
            "startDate": "2023-01-01",
            "endDate": "2023-01-05"
        }' "$USER_TOKEN")

        local invalid_date_status=$?
        if [ $invalid_date_status -eq 400 ]; then
            print_success "–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å). –ö–æ–¥: $invalid_date_status"
        elif echo "$INVALID_DATE_RESPONSE" | grep -q "error\|past\|invalid"; then
            print_success "–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–∞–∫ –∏ –æ–∂–∏–¥–∞–ª–æ—Å—å)"
        else
            print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞—Ç–∞—Ö. –ö–æ–¥: $invalid_date_status"
            print_debug "–û—Ç–≤–µ—Ç: $INVALID_DATE_RESPONSE"
        fi
    fi

    # –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    print_info "–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É —ç–Ω–¥–ø–æ–∏–Ω—Ç—É –±–µ–∑ —Ç–æ–∫–µ–Ω–∞..."
    NO_TOKEN_RESPONSE=$(http_request "GET" "$HOTELS_URL" "")
    local no_token_status=$?
    if [ $no_token_status -eq 401 ] || [ $no_token_status -eq 403 ]; then
        print_success "–ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–¥: $no_token_status"
    else
        print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞. –ö–æ–¥: $no_token_status"
        print_debug "–û—Ç–≤–µ—Ç: $NO_TOKEN_RESPONSE"
    fi
    echo
}

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ Eureka
check_eureka() {
    echo "=== 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Eureka ==="

    EUREKA_RESPONSE=$(curl -s "http://localhost:8761" | grep -o "hotel-booking-system\|Eureka" | head -1)
    if [ ! -z "$EUREKA_RESPONSE" ]; then
        print_success "Eureka –¥–æ—Å—Ç—É–ø–µ–Ω"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å–µ—Ä–≤–∏—Å–æ–≤
        SERVICES_REGISTERED=$(curl -s "http://localhost:8761" | grep -c "DS Replicas")
        if [ $SERVICES_REGISTERED -gt 0 ]; then
            print_success "–°–µ—Ä–≤–∏—Å—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ Eureka"
        else
            print_info "Eureka —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Å–µ—Ä–≤–∏—Å—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã"
        fi
    else
        print_error "Eureka –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
    echo
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π"
    echo "=============================================="
    echo

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    check_services

    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    authenticate_users

    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–µ–ª—è–º–∏ –∏ –Ω–æ–º–µ—Ä–∞–º–∏
    manage_hotels
    manage_rooms

    # –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    manage_bookings

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
    test_error_cases

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Eureka
    check_eureka

    echo "=============================================="
    echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    echo

    if [ ! -z "$USER_TOKEN" ]; then
        echo "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${USER_TOKEN:0:50}..."
    fi
    if [ ! -z "$ADMIN_TOKEN" ]; then
        echo "–¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${ADMIN_TOKEN:0:50}..."
    fi
    if [ ! -z "$ROOM_ID" ]; then
        echo "ID –Ω–æ–º–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: $ROOM_ID"
    fi

    echo
    echo "–î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "  Swagger UI: http://localhost:8080/swagger-ui.html"
    echo "  Eureka: http://localhost:8761"
    echo "  H2 Console Hotel: http://localhost:8082/h2-console"
    echo "  H2 Console Booking: http://localhost:8083/h2-console"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
main