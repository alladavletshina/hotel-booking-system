#!/bin/bash

# test-hotel-booking-system-complete.sh
# –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–µ–ª–µ–π

echo "=== –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ –ë–†–û–ù–ò–†–û–í–ê–ù–ò–Ø –û–¢–ï–õ–ï–ô ==="
echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ –∏ endpoints ==="
echo

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ë–∞–∑–æ–≤—ã–µ URL
GATEWAY_URL="http://localhost:8080"
AUTH_URL="$GATEWAY_URL/api/auth"
HOTELS_URL="$GATEWAY_URL/api/hotels"
ROOMS_URL="$GATEWAY_URL/api/rooms"
BOOKINGS_URL="$GATEWAY_URL/api/bookings"
USERS_URL="$GATEWAY_URL/api/admin/users"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
USER_TOKEN=""
ADMIN_TOKEN=""
HOTEL_ID=""
ROOM_ID=""
BOOKING_ID=""
USER_ID=""

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_success() {
    echo -e "${GREEN}‚úì $1${NC}"
}

print_error() {
    echo -e "${RED}‚úó $1${NC}"
}

print_info() {
    echo -e "${YELLOW}‚Ñπ $1${NC}"
}

print_debug() {
    echo -e "${BLUE}üêõ $1${NC}"
}

print_section() {
    echo -e "${PURPLE}=== $1 ===${NC}"
}

print_endpoint() {
    echo -e "${CYAN}‚û§ $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
http_request() {
    local method=$1
    local url=$2
    local data=$3
    local token=$4

    local curl_cmd="curl -s -w \"|%{http_code}\" -X $method \"$url\" -H \"Content-Type: application/json\""

    if [ ! -z "$token" ]; then
        curl_cmd="$curl_cmd -H \"Authorization: Bearer $token\""
    fi

    if [ ! -z "$data" ]; then
        curl_cmd="$curl_cmd -d '$data'"
    fi

    local response
    response=$(eval $curl_cmd 2>/dev/null)

    local body=$(echo "$response" | sed 's/|.*$//')
    local status_code=$(echo "$response" | sed 's/^.*|//')

    echo "$body"
    return $status_code
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
check_services_health() {
    print_section "1. –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø –°–ï–†–í–ò–°–û–í"

    services=(
        "eureka-server:8761"
        "auth-service:8081"
        "api-gateway:8080"
        "hotel-service:8082"
        "booking-service:8083"
    )

    for service in "${services[@]}"; do
        IFS=':' read -r name port <<< "$service"
        print_endpoint "–ü—Ä–æ–≤–µ—Ä–∫–∞ $name"
        if curl -s "http://localhost:$port/actuator/health" > /dev/null; then
            print_success "$name –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $port"
        else
            print_error "$name –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $port"
        fi
    done
    echo
}

# 2. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
test_auth_controller() {
    print_section "2. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AUTH CONTROLLER"

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print_endpoint "POST /api/auth/register - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    REGISTER_RESPONSE=$(http_request "POST" "$AUTH_URL/register" '{
        "username": "testuser",
        "password": "password123",
        "email": "testuser@example.com",
        "firstName": "Test",
        "lastName": "User"
    }')

    local register_status=$?
    if [ $register_status -eq 200 ] && echo "$REGISTER_RESPONSE" | grep -q "token"; then
        USER_TOKEN=$(echo "$REGISTER_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
        print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
    else
        print_error "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ö–æ–¥: $register_status"
        print_debug "–û—Ç–≤–µ—Ç: $REGISTER_RESPONSE"
    fi

    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print_endpoint "POST /api/auth/login - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    ADMIN_LOGIN_RESPONSE=$(http_request "POST" "$AUTH_URL/login" '{
        "username": "admin",
        "password": "admin123"
    }')

    local admin_status=$?
    if [ $admin_status -eq 200 ] && echo "$ADMIN_LOGIN_RESPONSE" | grep -q "token"; then
        ADMIN_TOKEN=$(echo "$ADMIN_LOGIN_RESPONSE" | grep -o '"token":"[^"]*' | cut -d'"' -f4)
        print_success "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω"
    else
        print_error "–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ö–æ–¥: $admin_status"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
    if [ ! -z "$USER_TOKEN" ]; then
        print_endpoint "GET /api/auth/validate - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞"
        VALIDATE_RESPONSE=$(http_request "GET" "$AUTH_URL/validate" "" "$USER_TOKEN")
        local validate_status=$?
        if [ $validate_status -eq 200 ]; then
            print_success "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–∞–ª–∏–¥–µ–Ω"
        else
            print_error "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–≤–∞–ª–∏–¥–µ–Ω. –ö–æ–¥: $validate_status"
        fi
    fi
    echo
}

# 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Hotel Controller
test_hotel_controller() {
    print_section "3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï HOTEL CONTROLLER"

    if [ -z "$ADMIN_TOKEN" ]; then
        print_error "–¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –æ—Ç–µ–ª–µ–π"
        return 1
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–µ–ª—è
    print_endpoint "POST /api/hotels - –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–µ–ª—è (ADMIN)"
    HOTEL_RESPONSE=$(http_request "POST" "$HOTELS_URL" '{
        "name": "Grand Plaza Hotel",
        "address": "123 Main Street, Moscow",
        "description": "Luxury 5-star hotel in city center"
    }' "$ADMIN_TOKEN")

    local hotel_status=$?
    if [ $hotel_status -eq 200 ] && echo "$HOTEL_RESPONSE" | grep -q "id"; then
        HOTEL_ID=$(echo "$HOTEL_RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        print_success "–û—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω. ID: $HOTEL_ID"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–µ–ª—è. –ö–æ–¥: $hotel_status"
        return 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç–µ–ª–µ–π
    print_endpoint "GET /api/hotels - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Ç–µ–ª–µ–π"
    HOTELS_LIST_RESPONSE=$(http_request "GET" "$HOTELS_URL" "" "$USER_TOKEN")
    local list_status=$?
    if [ $list_status -eq 200 ]; then
        print_success "–°–ø–∏—Å–æ–∫ –æ—Ç–µ–ª–µ–π –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π. –ö–æ–¥: $list_status"
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–µ–ª—è –ø–æ ID
    print_endpoint "GET /api/hotels/{id} - –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–µ–ª—è –ø–æ ID"
    HOTEL_BY_ID_RESPONSE=$(http_request "GET" "$HOTELS_URL/$HOTEL_ID" "" "$USER_TOKEN")
    local hotel_by_id_status=$?
    if [ $hotel_by_id_status -eq 200 ]; then
        print_success "–û—Ç–µ–ª—å –ø–æ ID –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–µ–ª—è –ø–æ ID. –ö–æ–¥: $hotel_by_id_status"
    fi

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–µ–ª—è
    print_endpoint "PUT /api/hotels/{id} - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–µ–ª—è (ADMIN)"
    UPDATE_HOTEL_RESPONSE=$(http_request "PUT" "$HOTELS_URL/$HOTEL_ID" '{
        "name": "Grand Plaza Hotel Updated",
        "address": "123 Main Street, Moscow, Updated",
        "description": "Luxury 5-star hotel - recently renovated"
    }' "$ADMIN_TOKEN")

    local update_status=$?
    if [ $update_status -eq 200 ]; then
        print_success "–û—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–µ–ª—è. –ö–æ–¥: $update_status"
    fi
    echo
}

# 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Room Controller
test_room_controller() {
    print_section "4. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ROOM CONTROLLER"

    if [ -z "$ADMIN_TOKEN" ] || [ -z "$HOTEL_ID" ]; then
        print_error "–¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ ID –æ—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        return 1
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
    print_endpoint "POST /api/rooms - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ (ADMIN)"
    ROOM_RESPONSE=$(http_request "POST" "$ROOMS_URL" '{
        "number": "101",
        "type": "DELUXE",
        "price": 5000.0,
        "available": true,
        "hotelId": '$HOTEL_ID'
    }' "$ADMIN_TOKEN")

    local room_status=$?
    if [ $room_status -eq 200 ] && echo "$ROOM_RESPONSE" | grep -q "id"; then
        ROOM_ID=$(echo "$ROOM_RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        print_success "–ù–æ–º–µ—Ä —Å–æ–∑–¥–∞–Ω. ID: $ROOM_ID"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞. –ö–æ–¥: $room_status"
        return 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–º–µ—Ä–æ–≤
    print_endpoint "GET /api/rooms - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤"
    ROOMS_RESPONSE=$(http_request "GET" "$ROOMS_URL" "" "$USER_TOKEN")
    local rooms_status=$?
    if [ $rooms_status -eq 200 ]; then
        print_success "–°–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤. –ö–æ–¥: $rooms_status"
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –ø–æ ID
    print_endpoint "GET /api/rooms/{id} - –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –ø–æ ID"
    ROOM_BY_ID_RESPONSE=$(http_request "GET" "$ROOMS_URL/$ROOM_ID" "" "$USER_TOKEN")
    local room_by_id_status=$?
    if [ $room_by_id_status -eq 200 ]; then
        print_success "–ù–æ–º–µ—Ä –ø–æ ID –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –ø–æ ID. –ö–æ–¥: $room_by_id_status"
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –ø–æ –æ—Ç–µ–ª—é
    print_endpoint "GET /api/rooms/hotel/{hotelId} - –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –æ—Ç–µ–ª—è"
    ROOMS_BY_HOTEL_RESPONSE=$(http_request "GET" "$ROOMS_URL/hotel/$HOTEL_ID" "" "$USER_TOKEN")
    local rooms_by_hotel_status=$?
    if [ $rooms_by_hotel_status -eq 200 ]; then
        print_success "–ù–æ–º–µ—Ä–∞ –æ—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –æ—Ç–µ–ª—è. –ö–æ–¥: $rooms_by_hotel_status"
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
    print_endpoint "GET /api/rooms/recommend - –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤"
    RECOMMENDED_RESPONSE=$(http_request "GET" "$ROOMS_URL/recommend" "" "$USER_TOKEN")
    local recommended_status=$?
    if [ $recommended_status -eq 200 ]; then
        print_success "–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤. –ö–æ–¥: $recommended_status"
    fi

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
    print_endpoint "PUT /api/rooms/{id} - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ (ADMIN)"
    UPDATE_ROOM_RESPONSE=$(http_request "PUT" "$ROOMS_URL/$ROOM_ID" '{
        "number": "101",
        "type": "SUPER_DELUXE",
        "price": 7500.0,
        "available": true,
        "hotelId": '$HOTEL_ID'
    }' "$ADMIN_TOKEN")

    local update_room_status=$?
    if [ $update_room_status -eq 200 ]; then
        print_success "–ù–æ–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞. –ö–æ–¥: $update_room_status"
    fi
    echo
}

# 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Booking Controller
test_booking_controller() {
    print_section "5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï BOOKING CONTROLLER"

    if [ -z "$USER_TOKEN" ] || [ -z "$ROOM_ID" ]; then
        print_error "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ ID –Ω–æ–º–µ—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        return 1
    fi

    # –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    local start_date=$(date -v+2d +%Y-%m-%d 2>/dev/null || date -d "+2 days" +%Y-%m-%d)
    local end_date=$(date -v+5d +%Y-%m-%d 2>/dev/null || date -d "+5 days" +%Y-%m-%d)

    print_endpoint "POST /api/bookings - –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
    BOOKING_RESPONSE=$(http_request "POST" "$BOOKINGS_URL" '{
        "roomId": '$ROOM_ID',
        "startDate": "'$start_date'",
        "endDate": "'$end_date'",
        "correlationId": "complete-test-'$(date +%s)'"
    }' "$USER_TOKEN")

    local booking_status=$?
    if [ $booking_status -eq 200 ] && echo "$BOOKING_RESPONSE" | grep -q "id"; then
        BOOKING_ID=$(echo "$BOOKING_RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        BOOKING_STATUS=$(echo "$BOOKING_RESPONSE" | grep -o '"status":"[^"]*' | cut -d'"' -f4)
        print_success "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ. ID: $BOOKING_ID, –°—Ç–∞—Ç—É—Å: $BOOKING_STATUS"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ö–æ–¥: $booking_status"
        return 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    print_endpoint "GET /api/bookings/my - –ü–æ–ª—É—á–µ–Ω–∏–µ –º–æ–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π"
    MY_BOOKINGS_RESPONSE=$(http_request "GET" "$BOOKINGS_URL/my" "" "$USER_TOKEN")
    local my_bookings_status=$?
    if [ $my_bookings_status -eq 200 ]; then
        print_success "–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–æ–∏—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π. –ö–æ–¥: $my_bookings_status"
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π (ADMIN)
    print_endpoint "GET /api/bookings - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π (ADMIN)"
    ALL_BOOKINGS_RESPONSE=$(http_request "GET" "$BOOKINGS_URL" "" "$ADMIN_TOKEN")
    local all_bookings_status=$?
    if [ $all_bookings_status -eq 200 ]; then
        print_success "–í—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ (ADMIN)"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π. –ö–æ–¥: $all_bookings_status"
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID (ADMIN)
    print_endpoint "GET /api/bookings/user/{userId} - –ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ADMIN)"
    # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    USER_BOOKINGS_RESPONSE=$(http_request "GET" "$BOOKINGS_URL/user/1" "" "$ADMIN_TOKEN")
    local user_bookings_status=$?
    if [ $user_bookings_status -eq 200 ]; then
        print_success "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–¥: $user_bookings_status"
    fi

    # –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    print_endpoint "DELETE /api/bookings/{id} - –û—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
    CANCEL_RESPONSE=$(http_request "DELETE" "$BOOKINGS_URL/$BOOKING_ID" "" "$USER_TOKEN")
    local cancel_status=$?
    if [ $cancel_status -eq 200 ]; then
        print_success "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
    else
        print_error "–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ö–æ–¥: $cancel_status"
    fi
    echo
}

# 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ User Controller (Admin only)
test_user_controller() {
    print_section "6. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï USER CONTROLLER (ADMIN)"

    if [ -z "$ADMIN_TOKEN" ]; then
        print_error "–¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        return 1
    fi

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print_endpoint "GET /api/admin/users - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    ALL_USERS_RESPONSE=$(http_request "GET" "$USERS_URL" "" "$ADMIN_TOKEN")
    local all_users_status=$?
    if [ $all_users_status -eq 200 ]; then
        print_success "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ç–µ—Å—Ç–æ–≤
        USER_ID=$(echo "$ALL_USERS_RESPONSE" | grep -o '"id":[0-9]*' | head -1 | cut -d':' -f2)
    else
        print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ö–æ–¥: $all_users_status"
        return 1
    fi

    if [ ! -z "$USER_ID" ]; then
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
        print_endpoint "GET /api/admin/users/{id} - –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID"
        USER_BY_ID_RESPONSE=$(http_request "GET" "$USERS_URL/$USER_ID" "" "$ADMIN_TOKEN")
        local user_by_id_status=$?
        if [ $user_by_id_status -eq 200 ]; then
            print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ ID –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        else
            print_error "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID. –ö–æ–¥: $user_by_id_status"
        fi

        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ADMIN)
        print_endpoint "POST /api/admin/users - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ADMIN)"
        NEW_USER_RESPONSE=$(http_request "POST" "$USERS_URL" '{
            "username": "newuserbyadmin",
            "password": "password123",
            "email": "newuserbyadmin@example.com",
            "firstName": "New",
            "lastName": "UserByAdmin",
            "role": "USER",
            "active": true
        }' "$ADMIN_TOKEN")

        local new_user_status=$?
        if [ $new_user_status -eq 200 ]; then
            print_success "–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
            NEW_USER_ID=$(echo "$NEW_USER_RESPONSE" | grep -o '"id":[0-9]*' | cut -d':' -f2)
        else
            print_error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–¥: $new_user_status"
        fi

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if [ ! -z "$NEW_USER_ID" ]; then
            print_endpoint "PUT /api/admin/users/{id} - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            UPDATE_USER_RESPONSE=$(http_request "PUT" "$USERS_URL/$NEW_USER_ID" '{
                "username": "updateduser",
                "email": "updateduser@example.com",
                "firstName": "Updated",
                "lastName": "User",
                "role": "USER",
                "active": true
            }' "$ADMIN_TOKEN")

            local update_user_status=$?
            if [ $update_user_status -eq 200 ]; then
                print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
            else
                print_error "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–¥: $update_user_status"
            fi

            # –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            print_endpoint "PATCH /api/admin/users/{id}/deactivate - –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            DEACTIVATE_RESPONSE=$(http_request "PATCH" "$USERS_URL/$NEW_USER_ID/deactivate" "" "$ADMIN_TOKEN")
            local deactivate_status=$?
            if [ $deactivate_status -eq 200 ]; then
                print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–¥: $deactivate_status"
            fi

            # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            print_endpoint "PATCH /api/admin/users/{id}/activate - –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            ACTIVATE_RESPONSE=$(http_request "PATCH" "$USERS_URL/$NEW_USER_ID/activate" "" "$ADMIN_TOKEN")
            local activate_status=$?
            if [ $activate_status -eq 200 ]; then
                print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–¥: $activate_status"
            fi
        fi
    fi
    echo
}

# 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ security
test_security_and_errors() {
    print_section "7. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ò –û–®–ò–ë–û–ö"

    # –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
    print_endpoint "–ë–µ–∑ —Ç–æ–∫–µ–Ω–∞ - –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã–º endpoint'–∞–º"
    NO_TOKEN_RESPONSE=$(http_request "GET" "$HOTELS_URL" "")
    local no_token_status=$?
    if [ $no_token_status -eq 401 ] || [ $no_token_status -eq 403 ]; then
        print_success "–ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–¥: $no_token_status"
    else
        print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –±–µ–∑ —Ç–æ–∫–µ–Ω–∞. –ö–æ–¥: $no_token_status"
    fi

    # –ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ ADMIN endpoint'–∞–º
    if [ ! -z "$USER_TOKEN" ]; then
        print_endpoint "USER –¥–æ—Å—Ç—É–ø –∫ ADMIN endpoint'–∞–º - —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–µ–ª—è"
        USER_AS_ADMIN_RESPONSE=$(http_request "POST" "$HOTELS_URL" '{
            "name": "Unauthorized Hotel",
            "address": "Test Address"
        }' "$USER_TOKEN")

        local user_as_admin_status=$?
        if [ $user_as_admin_status -eq 403 ] || [ $user_as_admin_status -eq 401 ]; then
            print_success "–ó–∞—â–∏—Ç–∞ ADMIN endpoint'–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–¥: $user_as_admin_status"
        else
            print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ USER –∫ ADMIN endpoint'—É. –ö–æ–¥: $user_as_admin_status"
        fi

        print_endpoint "USER –¥–æ—Å—Ç—É–ø –∫ ADMIN endpoint'–∞–º - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
        USER_MANAGE_USERS_RESPONSE=$(http_request "GET" "$USERS_URL" "" "$USER_TOKEN")
        local user_manage_users_status=$?
        if [ $user_manage_users_status -eq 403 ] || [ $user_manage_users_status -eq 401 ]; then
            print_success "–ó–∞—â–∏—Ç–∞ User Controller —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–¥: $user_manage_users_status"
        else
            print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ USER –∫ User Controller. –ö–æ–¥: $user_manage_users_status"
        fi
    fi

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print_endpoint "–ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - —Å–æ–∑–¥–∞–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø—Ä–æ—à–µ–¥—à–∏–º–∏ –¥–∞—Ç–∞–º–∏"
    INVALID_BOOKING_RESPONSE=$(http_request "POST" "$BOOKINGS_URL" '{
        "roomId": '$ROOM_ID',
        "startDate": "2023-01-01",
        "endDate": "2023-01-05"
    }' "$USER_TOKEN")

    local invalid_booking_status=$?
    if [ $invalid_booking_status -eq 400 ]; then
        print_success "–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–¥: $invalid_booking_status"
    else
        print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞—Ç–∞—Ö. –ö–æ–¥: $invalid_booking_status"
    fi

    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    print_endpoint "–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–µ—Å—É—Ä—Å - –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–µ–ª—è —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º ID"
    NOT_FOUND_RESPONSE=$(http_request "GET" "$HOTELS_URL/99999" "" "$USER_TOKEN")
    local not_found_status=$?
    if [ $not_found_status -eq 404 ]; then
        print_success "–û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –æ—à–∏–±–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–¥: $not_found_status"
    else
        print_error "–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ—Å—É—Ä—Å–∞. –ö–æ–¥: $not_found_status"
    fi
    echo
}

# 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ Eureka –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
test_monitoring() {
    print_section "8. –ü–†–û–í–ï–†–ö–ê MONITORING –ò DISCOVERY"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Eureka
    print_endpoint "Eureka Server - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
    if curl -s "http://localhost:8761" > /dev/null; then
        print_success "Eureka Server –¥–æ—Å—Ç—É–ø–µ–Ω"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
        SERVICES_COUNT=$(curl -s "http://localhost:8761/eureka/apps" | grep -c "<name>")
        if [ $SERVICES_COUNT -gt 0 ]; then
            print_success "–í Eureka –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: $SERVICES_COUNT"
        else
            print_error "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ Eureka"
        fi
    else
        print_error "Eureka Server –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoints
    print_endpoint "Health Checks - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤"
    services=("auth-service:8081" "api-gateway:8080" "hotel-service:8082" "booking-service:8083")

    for service in "${services[@]}"; do
        IFS=':' read -r name port <<< "$service"
        HEALTH_RESPONSE=$(curl -s "http://localhost:$port/actuator/health")
        if echo "$HEALTH_RESPONSE" | grep -q "\"status\":\"UP\""; then
            print_success "$name: UP"
        else
            print_error "$name: DOWN –∏–ª–∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi
    done

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Swagger UI
    print_endpoint "Swagger UI - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API"
    if curl -s "http://localhost:8080/swagger-ui.html" | grep -q "swagger-ui" > /dev/null; then
        print_success "Swagger UI –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        print_error "Swagger UI –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    echo
}

# 9. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
cleanup_test_data() {
    print_section "9. –û–ß–ò–°–¢–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•"

    if [ ! -z "$ADMIN_TOKEN" ]; then
        # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–µ–ª—è
        if [ ! -z "$HOTEL_ID" ]; then
            print_endpoint "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–µ–ª—è"
            DELETE_HOTEL_RESPONSE=$(http_request "DELETE" "$HOTELS_URL/$HOTEL_ID" "" "$ADMIN_TOKEN")
            local delete_hotel_status=$?
            if [ $delete_hotel_status -eq 200 ]; then
                print_success "–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–µ–ª—è. –ö–æ–¥: $delete_hotel_status"
            fi
        fi

        # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if [ ! -z "$NEW_USER_ID" ]; then
            print_endpoint "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            DELETE_USER_RESPONSE=$(http_request "DELETE" "$USERS_URL/$NEW_USER_ID" "" "$ADMIN_TOKEN")
            local delete_user_status=$?
            if [ $delete_user_status -eq 200 ]; then
                print_success "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–æ–¥: $delete_user_status"
            fi
        fi
    fi
    echo
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "–ù–ê–ß–ê–õ–û –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –°–ò–°–¢–ï–ú–´"
    echo "=============================================="
    echo

    check_services_health
    test_auth_controller
    test_hotel_controller
    test_room_controller
    test_booking_controller
    test_user_controller
    test_security_and_errors
    test_monitoring
    # cleanup_test_data  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö

    echo "=============================================="
    echo "–ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û"
    echo

    echo "–°–≤–æ–¥–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:"
    if [ ! -z "$USER_TOKEN" ]; then
        echo "–¢–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${USER_TOKEN:0:50}..."
    fi
    if [ ! -z "$ADMIN_TOKEN" ]; then
        echo "–¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${ADMIN_TOKEN:0:50}..."
    fi
    if [ ! -z "$HOTEL_ID" ]; then
        echo "ID –æ—Ç–µ–ª—è: $HOTEL_ID"
    fi
    if [ ! -z "$ROOM_ID" ]; then
        echo "ID –Ω–æ–º–µ—Ä–∞: $ROOM_ID"
    fi
    if [ ! -z "$BOOKING_ID" ]; then
        echo "ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: $BOOKING_ID"
    fi

    echo
    echo "–î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "  Swagger UI: http://localhost:8080/swagger-ui.html"
    echo "  Eureka: http://localhost:8761"
    echo "  H2 Console Hotel: http://localhost:8082/h2-console"
    echo "  H2 Console Booking: http://localhost:8083/h2-console"
    echo "  H2 Console Auth: http://localhost:8081/h2-console"
}

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
main