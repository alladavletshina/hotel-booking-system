server:
  port: 8083

spring:
  application:
    name: booking-service
  datasource:
    url: jdbc:h2:mem:bookingdb
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  security:
    oauth2:
      resourceserver:
        jwt:
          secret-value: "mySuperSecretKeyForJWTTokenGenerationInAuthService123!"

# Internal service configuration for inter-service communication
internal:
  service:
    username: internal-service
    password: internal-secret-123

# Auth service configuration - ИСПРАВЛЕНО
auth:
  service:
    url: http://localhost:8080/api/auth  # ← ВАЖНО: через API Gateway

# Hotel service configuration
hotel:
  service:
    url: http://localhost:8082

# Feign client configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: full
      hotel-service:
        url: http://localhost:8082
  httpclient:
    enabled: true

# Eureka configuration
eureka:
  client:
    service-url:
      defaultZone: http://admin:admin123@localhost:8761/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

# SpringDoc configuration
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

# Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Logging configuration
logging:
  level:
    com.hotelbooking.booking: DEBUG
    com.hotelbooking.booking.service.InternalAuthService: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    feign: DEBUG
    com.hotelbooking.booking.client.HotelServiceClient: DEBUG